// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPWS.Models.pwsstore;
using NetTopologySuite.Geometries;

#nullable disable

namespace MyPWS.Migrations
{
    [DbContext(typeof(PwsStoreContext))]
    [Migration("20220105100107_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyPWS.Models.pwsstore.Configwunderground", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPws")
                        .HasColumnType("int");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int?>("PwsIdPws")
                        .HasColumnType("int");

                    b.Property<string>("Wuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PwsIdPws");

                    b.ToTable("Configwunderground");
                });

            modelBuilder.Entity("MyPWS.Models.pwsstore.Pws", b =>
                {
                    b.Property<int>("IdPws")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPws"), 1L, 1);

                    b.Property<short>("Alt")
                        .HasColumnType("smallint");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Point>("GpsCoordinates")
                        .HasColumnType("geography");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("IdPws");

                    b.ToTable("PWS");
                });

            modelBuilder.Entity("MyPWS.Models.pwsstore.Weather", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal?>("Baromhpa")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal?>("Dailyrainmm")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<DateTime>("Dateutc")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Dewptc")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<short?>("Humidity")
                        .HasPrecision(3)
                        .HasColumnType("smallint");

                    b.Property<int>("IdPws")
                        .HasColumnType("int");

                    b.Property<short?>("Indoorhumidity")
                        .HasPrecision(3)
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Indoortempc")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<int?>("PwsIdPws")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rainmm")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal?>("Tempc")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<decimal?>("Uv")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<short?>("Winddir")
                        .HasPrecision(3)
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Windgustkmh")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal?>("Windspeedkmh")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)");

                    b.HasKey("Id");

                    b.HasIndex("PwsIdPws");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("MyPWS.Models.pwsstore.Configwunderground", b =>
                {
                    b.HasOne("MyPWS.Models.pwsstore.Pws", "Pws")
                        .WithMany("Configwunderground")
                        .HasForeignKey("PwsIdPws");

                    b.Navigation("Pws");
                });

            modelBuilder.Entity("MyPWS.Models.pwsstore.Weather", b =>
                {
                    b.HasOne("MyPWS.Models.pwsstore.Pws", "Pws")
                        .WithMany("Weathers")
                        .HasForeignKey("PwsIdPws");

                    b.Navigation("Pws");
                });

            modelBuilder.Entity("MyPWS.Models.pwsstore.Pws", b =>
                {
                    b.Navigation("Configwunderground");

                    b.Navigation("Weathers");
                });
#pragma warning restore 612, 618
        }
    }
}
